*NUMBLOCKS = 20 blocos
*BLOCKSIZE = 100 // Tamanho do bloco: 100 caracteres

bitmap: NUMBLOCKS 80 = 80 caracteres
    Base: 0
    Limite do bloco final: (1 + NUMBLOCKS/BLOCKSIZE)*BLOCKSIZE - 1 = (1 + 80/100)*100 - 1 = 99
    Quantidade de blocos utilizados: 1 + NUMBLOCKS/BLOCKSIZE

fat: 6*NUMBLOCKS - 1 = 6*80 - 1 = 479 caracteres
(1 + (6*NUMBLOCKS)/BLOCKSIZE)*BLOCKSIZE - 1 = (1 + (6*80)/100)*100  - 1 = (1 + 480/100)*100 - 1 = 499
    Base: (1 + NUMBLOCKS/BLOCKSIZE)*BLOCKSIZE = (1 + 80/100)*100 = 100
    Limite do bloco final: (2 + NUMBLOCKS/BLOCKSIZE + (6*NUMBLOCKS)/BLOCKSIZE)*BLOCKSIZE
    Quantidade de blocos utilizados: (1 + (6*NUMBLOCKS)/BLOCKSIZE)

root:
    Base: (2 + NUMBLOCKS/BLOCKSIZE + (6*NUMBLOCKS)/BLOCKSIZE)*BLOCKSIZE = (2 + 80/100 + (6*80)/100)*100 = (2 + 4)*100 = 600
    Quantidade de blocos Ãºteis: NUMBLOCKS_UTEIS = NUMBLOCKS - (1 + NUMBLOCKS/BLOCKSIZE) - (1 + (6*NUMBLOCKS)/BLOCKSIZE)
        NUMBLOCKS_UTEIS = NUMBLOCKS - NUMBLOCKS/BLOCKSIZE) - (6*NUMBLOCKS)/BLOCKSIZE) - 2

a99
#define ROOT (2 + NUMBLOCKS/BLOCKSIZE + (6*NUMBLOCKS)/BLOCKSIZE)*BLOCKSIZE
ROOT = (2 + 99/100 + 594/100)*100 = (2 + 0 + 5)*100 = 700

a100
#define ROOT (2 + NUMBLOCKS/BLOCKSIZE + (6*NUMBLOCKS)/BLOCKSIZE)*BLOCKSIZE
ROOT = (2 + 100/100 + 600/100)*100 = (2 + 1 + 6)*100 = 900
